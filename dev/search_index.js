var documenterSearchIndex = {"docs":
[{"location":"intro/#MambaModels-1","page":"Home","title":"MambaModels","text":"","category":"section"},{"location":"intro/#","page":"Home","title":"Home","text":"This package contains Julia Mamba versions of selected code snippets and mcmc models contained in the R package \"rethinking\" associated with the book Statistical Rethinking by Richard McElreath.","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"EditURL = \"https://github.com/StatisticalRethinkingJulia/MambaModels.jl/blob/master/scripts/02/m2.1m.jl\"","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"#using Distributed\n#@everywhere using MambaModels\nusing MambaModels","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Data","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"globe_toss = Dict{Symbol, Any}(\n  :w => [6, 7, 5, 6, 6],\n  :n => [9, 9, 9, 9, 9]\n)\nglobe_toss[:N] = length(globe_toss[:w]);","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Model Specification","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"model = Model(\n  w = Stochastic(1,\n    (n, p, N) ->\n      UnivariateDistribution[Binomial(n[i], p) for i in 1:N],\n    false\n  ),\n  p = Stochastic(() -> Beta(1, 1))\n);","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Initial Values","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"inits = [\n  Dict(:w => globe_toss[:w], :n => globe_toss[:n], :p => 0.5),\n  Dict(:w => globe_toss[:w], :n => globe_toss[:n], :p => rand(Beta(1, 1)))\n];","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Sampling Scheme","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"scheme = [NUTS(:p)]\nsetsamplers!(model, scheme);","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"MCMC Simulations","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"chn = mcmc(model, globe_toss, inits, 10000, burnin=2500, thin=1, chains=2);","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Describe draws","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"describe(chn)","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Convert to MCMCChains.Chains object","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"chn2 = MCMCChains.Chains(chn.value, String.(chn.names))","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Describe the MCMCChains","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"MCMCChains.describe(chn2)","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"Plot chn2","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"MCMCChains.plot(chn2)","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"End of 02/m2.1m.jl","category":"page"},{"location":"02/m2.1m/#","page":"m2.1m","title":"m2.1m","text":"This page was generated using Literate.jl.","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"EditURL = \"https://github.com/StatisticalRethinkingJulia/MambaModels.jl/blob/master/scripts/04/m4.4m.jl\"","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"#using Distributed\n#@everywhere using MambaModels\nusing MambaModels\ngr(size=(400,400))\n\n# Data\nline = Dict{Symbol, Any}()\n\nhowell1 = CSV.read(rel_path(\"..\", \"data\", \"Howell1.csv\"), delim=';')\ndf = convert(DataFrame, howell1);","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Use only adults","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"df2 = filter(row -> row[:age] >= 18, df);\nmean_weight = mean(df2[:weight])\ndf2[:weight_c] = convert(Vector{Float64}, df2[:weight]) .- mean_weight ;\nline[:x] = convert(Array{Float64,1}, df2[:weight_c]);\nline[:y] = convert(Array{Float64,1}, df2[:height]);\nline[:xmat] = convert(Array{Float64,2}, [ones(length(line[:x])) line[:x]])","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Model Specification","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"model = Model(\n  y = Stochastic(1,\n    (xmat, beta, s2) -> MvNormal(xmat * beta, sqrt(s2)),\n    false\n  ),\n  beta = Stochastic(1, () -> MvNormal([178, 0], [sqrt(10000), sqrt(100)])),\n  s2 = Stochastic(() -> Uniform(0, 50))\n)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Initial Values","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"inits = [\n  Dict{Symbol, Any}(\n    :y => line[:y],\n    :beta => [rand(Normal(178, 100)), rand(Normal(0, 10))],\n    :s2 => rand(Uniform(0, 50))\n  )\n  for i in 1:3\n]","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Tuning Parameters","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"scale1 = [0.5, 0.25]\nsummary1 = identity\neps1 = 0.5\n\nscale2 = 0.5\nsummary2 = x -> [mean(x); sqrt(var(x))]\neps2 = 0.1","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Define sampling scheme","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"scheme = [\n  Mamba.NUTS([:beta]),\n  Mamba.Slice([:s2], 10)\n]\n\nsetsamplers!(model, scheme)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"MCMC Simulation","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"chn = mcmc(model, line, inits, 10000, burnin=1000, chains=3)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Show draws summary","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"describe(chn)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Convert to MCMCChains.Chains object","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"chn2 = MCMCChains.Chains(chn.value, String.(chn.names))","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Describe the MCMCChains","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"MCMCChains.describe(chn2)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"Plot chn2","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"MCMCChains.plot(chn2)","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"End of 04/m4.1m.jl","category":"page"},{"location":"04/m4.4m/#","page":"m4.4m","title":"m4.4m","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#","page":"Functions","title":"Functions","text":"CurrentModule = MambaModels","category":"page"},{"location":"#rel_path_m-1","page":"Functions","title":"rel_path_m","text":"","category":"section"},{"location":"#","page":"Functions","title":"Functions","text":"rel_path_m(parts...)","category":"page"},{"location":"#MambaModels.rel_path_m-Tuple","page":"Functions","title":"MambaModels.rel_path_m","text":"relpathm\n\nRelative path using the MambaModels src/ directory.\n\nExample to get access to the data subdirectory\n\nrel_path_m(\"..\", \"data\")\n\n\n\n\n\n","category":"method"},{"location":"#generate_m-1","page":"Functions","title":"generate_m","text":"","category":"section"},{"location":"#","page":"Functions","title":"Functions","text":"generate_m(; sd=script_dict_m)\ngenerate_m(chapter::AbstractString; sd=script_dict_m)\ngenerate_m(chapter::AbstractString, scriptfile::AbstractString; sd=script_dict_m)","category":"page"},{"location":"#MambaModels.generate_m-Tuple{}","page":"Functions","title":"MambaModels.generate_m","text":"generate\n\nUtility function to generate all notebooks and chapters from scripts in the scripts directory.\n\nMethod\n\ngenerate_m(sd = script_dict_m)\n\nRequired arguments\n\nNone, all notebooks/.. and chapters/.. files are regenerated.\n\n\n\n\n\n","category":"method"},{"location":"#MambaModels.generate_m-Tuple{AbstractString}","page":"Functions","title":"MambaModels.generate_m","text":"generate\n\nGenerate notebooks and scripts in a single chapter.\n\nMethod\n\ngenerate_m(chapter::AbstractString)\n\nRequired arguments\n\nGenerate notebooks and scripts in a single chapter, e.g. generate_m(\"04\")\n\n\n\n\n\n","category":"method"},{"location":"#MambaModels.generate_m-Tuple{AbstractString,AbstractString}","page":"Functions","title":"MambaModels.generate_m","text":"generate\n\nGenerate a single notebook and script\n\nMethod\n\ngenerate_m(chapter::AbstractString, file::AbstractString)\n\nRequired arguments\n\nGenerate notebook and script file in chapter, e.g. generatem(\"04\", \"m4.1d.jl\") or  generatem(\"04/m4.1d.jl\")\n\n\n\n\n\n","category":"method"},{"location":"#ScriptEntry-1","page":"Functions","title":"ScriptEntry","text":"","category":"section"},{"location":"#","page":"Functions","title":"Functions","text":"ScriptEntry","category":"page"},{"location":"#StatisticalRethinking.ScriptEntry","page":"Functions","title":"StatisticalRethinking.ScriptEntry","text":"ScriptEntry\n\nDefine processing requirements for chapter scripts\n\nConstructor\n\nscriptentry(scriptfile;; nb=true, exe=true, doc=true)\n\nRequired arguments\n\n* `scriptfile::AbstractString`        : Script file\n\nOptional arguments\n\n* `nb::Bool`      : Generate a notebook version in notebooks directory\n* `exe::Bool`     : Execute the notebook (for testing or documentation purposes)\n* `doc::Bool`     : Insert documention into Github pages\n\nIf exe = false and doc = true it is assumed the appropriate .md files have been manually created and stored in docs/src/nn/... (Travis will terminate if runs take too long).\n\n\n\n\n\n","category":"type"},{"location":"#scriptentry-1","page":"Functions","title":"scriptentry","text":"","category":"section"},{"location":"#","page":"Functions","title":"Functions","text":"scriptentry(scriptfile; nb = true, exe = true, doc = true)","category":"page"},{"location":"#StatisticalRethinking.scriptentry-Tuple{Any}","page":"Functions","title":"StatisticalRethinking.scriptentry","text":"scriptentry\n\nConstructor for ScriptEntry objects.\n\nConstructor\n\nscriptentry(scriptfile;; nb=true, exe=true, doc=true)\n\nRequired arguments\n\n* `scriptfile::AbstractString`        : Script file\n\nOptional arguments\n\n* `nb::Bool`      : Generate a notebook version in notebooks directory\n* `exe::Bool`     : Execute the notebook (for testing or documentation purposes)\n* `doc::Bool`     : Insert documention into Github pages\n\nIf exe = false and doc = true it is assumed the appropriate .md files have been manually created and stored in docs/src/nn/... (Travis will terminate if runs take too long).\n\n\n\n\n\n","category":"method"}]
}
